<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAETz0r9FA+
        LP9QPiz/UD4s/1A+LP9QPSv4SzwtIgAAAABOPSprUD4s/1A+LP9QPiz/UD4s/089K/5OPCuCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABPPSvUf4DJ/4uQ8P+LkPD/i5Dw/2pigv9OPSqVTz4pPVA8K2ldUVn/i5Dw/4uQ8P+LkPD/honf/1VF
        PvxMPCg/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE4+K5hxbJz/i5Dw/4uQ8P+LkPD/gYLP/1pMT/9eUVv/WUpJ/1VFPf+LkPD/i5Dw/4uQ
        8P+LkPD/eni3/08+K94/KioMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATzwqbWRab/+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/Zl13/1A8Ko8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE88K11SQjX2dnOs/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+GiuL/VEQ7+08+Jy0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVOBwJTT0qX048K4JOPCqbVkdD/YGD0f+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P9ybp//Tz0rtwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVQAAA089K8ZiV2j/bmeP/3Bql/+ChNT/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4mO7P9XSET+UDwoMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNOylWYldo/4uP7/+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/29q
        lf9PPCuXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE89K512c6z/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/goTT/08+K+YAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATzwrvX19xP+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/WkxP/0w5KzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOPCq4eni4/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P9lXHP/Tj4rXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE89
        K2NXSEX+bmeQ/318wv+LkPD/i5Dw/39/yP9+f8j/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/3l4ueRLPiklAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFA8KDNPPSuOV0hE/4uQ8P+LkPD/U0M4/1NDOP+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P91caj/Ylhq2VA8KmZPPx8QAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQPSvlgoTU/4uQ8P91caf/dXGn/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/319w/5YSUmBTz0rplA9
        K+VNOytSSDwkFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE88K5RqY4T/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/d3Wv3gAA
        AANPPSqhTz0r9k89K+NPPSvsTDkmKAAAAAAAAAAAAAAAAAAAAABOPCk3UkAz8Xl3tv+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+Jjen/dnOr/4uQ8P+LkPD/i5Dw/3Vx
        p/9QPSzbTTsoOE89KtZPPCuGTz0rgE49K4hPPCqDAAAAAAAAAAAAAAAATz8fEFJAMeZ8e77/i5Dw/4uQ
        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
        Af//8AH///gD///8B////g////////////8=
</value>
  </data>
</root>